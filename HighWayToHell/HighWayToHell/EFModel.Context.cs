//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HighWayToHell
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ConnectionStringEF : DbContext
    {
        public ConnectionStringEF()
            : base("name=ConnectionStringEF")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<grade> grade { get; set; }
        public virtual DbSet<group> group { get; set; }
        public virtual DbSet<student> student { get; set; }
        public virtual DbSet<subject> subject { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<teacher> teacher { get; set; }
        public virtual DbSet<teacher_groups> teacher_groups { get; set; }
    
        public virtual ObjectResult<StudentInsertCommand_Result> StudentInsertCommand(string name, string surname, string eska, Nullable<int> groupId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var eskaParameter = eska != null ?
                new ObjectParameter("eska", eska) :
                new ObjectParameter("eska", typeof(string));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentInsertCommand_Result>("StudentInsertCommand", nameParameter, surnameParameter, eskaParameter, groupIdParameter);
        }
    }
}
